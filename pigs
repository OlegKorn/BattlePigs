import sys
from PIL import Image, ImageDraw
import os


class Pig:
    '''
    Creates pics with wuotation marks
    '''

    def __init__(self):
        # define the path where your file is
        self.path = os.path.abspath(os.path.dirname(sys.argv[0])).replace('\\', '/')

        # starting points of flag
        self.start_point_x = 0
        self.start_point_y = 0

        # define colors
        self.WHITE = '#FFFFFF'
        self.BLUE_RU = '#0033A0'
        self.RED = '#DA291C'

        self.BLUE_UKR = '#005BBB'
        self.YELLOW = '#FFD500'

        self.QUOTATION_COLOR = '#ddd'


    def draw_quotation_mark(self, draw_obj, w, h):
        quotation_mark_start_point_x = int(w * 0.7)
        quotation_mark_start_point_y = int(h / 2)

        quotation_mark_x2 = quotation_mark_start_point_x + int(w * 0.055)
        quotation_mark_y2 = quotation_mark_start_point_y - int(h * 0.015)

        quotation_mark_x3 = w
        quotation_mark_y3 = 0

        quotation_mark_x4 = w
        quotation_mark_y4 = h

        quotation_mark_x5 = quotation_mark_start_point_x + int(w * 0.055)
        quotation_mark_y5 = quotation_mark_start_point_y + int(h * 0.03)
                    
        xy = [
            (quotation_mark_start_point_x, quotation_mark_start_point_y), 
            (quotation_mark_x2, quotation_mark_y2), 
            (quotation_mark_x3, quotation_mark_y3), 
            (quotation_mark_x4, quotation_mark_y4),
            (quotation_mark_x5, quotation_mark_y5)
        ]

        draw_obj.polygon(xy, fill=self.QUOTATION_COLOR)


    def main(self):
        for pic in os.listdir(self.path):
            if not pic.endswith('.py'):
                title = (pic.split('.')[0] + '_done').strip()

                with Image.open(pic) as im:
                    draw = ImageDraw.Draw(im)
                    print(im.width, im.height)

                    self.draw_quotation_mark(draw, im.width, im.height)
                    self.draw_ukrainian_banner(draw, im.width, im.height)


                    # im.save(f'{title}.jpeg')
                    im.show()

                    print(f'Created: {title}')


    def draw_russian_banner(self, draw_obj, w, h):
        '''
        ImageDraw.polygon(xy, fill=None, outline=None)

        Draws a RUS banner in the upper left corner
        Params:
          -- xy – Sequence of either 2-tuples like [(x, y), (x, y), ...] or numeric values like [x, y, x, y, ...].
          -- outline – Color to use for the outline
          -- fill – Color to use for the point
        '''

        # flag stripes params
        stripe_w = int(w * 0.35)
        stripe_h = int(h * 0.05)
        
        stripe_1 = [(self.start_point_x, self.start_point_y), (stripe_w, stripe_h)]
        stripe_2 = [(self.start_point_x, stripe_h), (stripe_w, stripe_h * 2)]
        stripe_3 = [(self.start_point_x, stripe_h * 2), (stripe_w, stripe_h * 3)]

        draw_obj.rectangle(stripe_1, self.WHITE)
        draw_obj.rectangle(stripe_2, self.RED)
        draw_obj.rectangle(stripe_3, self.BLUE_RU)


    def draw_ukrainian_banner(self, draw_obj, w, h):
        '''
        ImageDraw.polygon(xy, fill=None, outline=None)

        Draws a UKR banner in the upper left corner
        Params:
          -- xy – Sequence of either 2-tuples like [(x, y), (x, y), ...] or numeric values like [x, y, x, y, ...].
          -- outline – Color to use for the outline
          -- fill – Color to use for the point
        '''

        # flag stripes params
        stripe_w = int(w * 0.35)
        stripe_h = int(h * 0.075)
        
        stripe_1 = [(self.start_point_x, self.start_point_y), (stripe_w, stripe_h)]
        stripe_2 = [(self.start_point_x, stripe_h), (stripe_w, stripe_h * 2)]

        draw_obj.rectangle(stripe_1, self.BLUE_UKR)
        draw_obj.rectangle(stripe_2, self.YELLOW)



p = Pig()
p.main()
